#
# Copyright 2016 Robert Clark (clark@exiter.com)
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

#
# This is a Python-style config file, details about the config syntax
# are available from https://docs.python.org/2/library/configparser.html
#
#   The configuration file consists of sections, led by a [section] header and
#   followed by name: value entries, with continuations in the style of RFC 822
#   (see section 3.1.1, “LONG HEADER FIELDS”); name=value is also accepted. Note
#   that leading whitespace is removed from values. The optional values can contain
#   format strings which refer to other values in the same section, or values in
#   a special DEFAULT section. Additional defaults can be provided on
#   initialization and retrieval. Lines beginning with '#' or ';' are ignored
#   and may be used to provide comments.
#
#   Configuration files may include comments, prefixed by specific characters
#   (# and ;). Comments may appear on their own in an otherwise empty line,
#   or may be entered in lines holding values or section names. In the latter
#   case, they need to be preceded by a whitespace character to be recognized
#   as a comment. (For backwards compatibility, only ; starts an inline comment,
#   while # does not.)
#
# The requires sections and options are
#
#  1. Slack
#    api_token
#    bot_id
#  2. ZoneMinder
#    url
#    username
#    password
#

[Runtime]

#
# Whether or not to start as a Unix daemon (in the background). This should
# be set to false (the default) if you intend to run the zonebot script
# using something like the Linux start-stop-daemon command.
#
daemon = false

#
# Configuration information about Slack
#
[Slack]

# Your Slack API token. Keep this secret and treat it like a password.
#  Ref: https://api.slack.com/tokens
api_token = x-123-abc

# The user ID of your bot account. From the output of the get_bot_id.py
# script.
bot_id = U1D3U

# Channel to post notifications to (if you are using the zonebot-alert script
# to send events to Slack). Single or multiple (comma separated) channels are
# supported.
channels = security-monitoring

#
# Configuration information about your ZoneMinder installation
#
[ZoneMinder]

# Base URL of the ZoneMinder install. This should be the page
# you go to when you log in.
url = http://server/zm/

# Username of the account to use when connecting to ZoneMinder
# Creating a new user just for the bot is recommended
username = admin

# Password to use when the bot logs into ZoneMinder
password = admin

#
# Optional logging configuration.
#
[Logging]

# Minimum log level (default: 'info', options: 'debug', 'info', 'warn', 'error')
level = info

# Whether or not to log to the console (default: true)
console = true

# Whether or not to log to syslog (default: false)
syslog = false

# Whether or not to log to a separate file (default: false)
file = false

#
# Settings specific to syslog loggers
#
[Syslog Logging]

# The server to which to send syslog messages. (default: the local system)
server = localhost

# Port to use for sending syslog message. (default: 514 for UDP packets)
port = 514

# Facility to use. (default: 'daemon').
# Refer to logger(1) for valid values
facility = daemon

#
# Settings specific to file loggers
#
[File Logging]

# If logging to a separate file, which directory should the file be created in
file_dir = .

# If logging to a file, which base name should the file have
# (the full file name will be "${file_base_name}.log" and "${file_base_name}.log.${index},gz")
file_base_name = zoneminder-slack-bot
